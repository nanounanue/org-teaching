
# Main lesson contents file. Course writing happens here. Please edit
# at will

# See [[./handbook.org]] or [[./slides.org]], resp for the handbook
# for students or the slides for presentation in the classroom.

#+TITLE: How to teach using org-mode for fun and profit
#+DESCRIPTION: Olivier Berger's org-mode framework for teaching
#+AUTHOR: Olivier Berger
#+DATE: 2018-04-23



# won't work for the moment
# #+REVEAL_HEAD_PREAMBLE: <style type="text/css">
# #+REVEAL_HEAD_PREAMBLE:<!--/*--><![CDATA[/*><!--*/
# #+REVEAL_HEAD_PREAMBLE: div.figure { float:right; }
# #+REVEAL_HEAD_PREAMBLE: /*]]>*/-->
# #+REVEAL_HEAD_PREAMBLE: </style>


#+REVEAL_HLEVEL: 2
# +REVEAL_THEME: league
#+REVEAL_THEME: simple
# +REVEAL_TRANS: none
#+REVEAL_TRANS: fade
#+REVEAL_SPEED: fast
#+REVEAL_MARGIN: 0.0
#+REVEAL_EXTRA_CSS: ./presentation.css
#+REVEAL_ROOT: ./reveal.js
# +REVEAL_TITLE_SLIDE_BACKGROUND: ./media/title-slide-background.png
#+REVEAL_EXTRA_JS:      { src: './reveal.js-jump-plugin/jump/jump.js', async: true }

# org-reveal options : 
#+OPTIONS: reveal_center:nil 
# + OPTIONS: reveal_title_slide:<h1>%s</h1>

#+OPTIONS: tags:nil ^:nil

#+LANGUAGE: en


#+REVEAL_HEAD_PREAMBLE: <meta name="copyright" content="Teaching with org-mode / org-reveal for fun and profit -- Olivier Berger  -- 2016" />



* Introduction

This is a demo document about the
[[http://www-public.tem-tsp.eu/~berger_o/org-teaching/][codename =org-teaching=]] framework.

* Slides                                                         :slidesonly:
#+ATTR_REVEAL: :frag (appear)
- /You're viewing a [[http://lab.hakim.se/reveal-js/][reveal.js]] Web slides deck. You may press 's' to view presenter notes./

#+BEGIN_NOTES
You'll find the source code at Gitlab : https://gitlab.com/olberger/org-teaching

I mention /codename/ =org-teaching= because it really hasn't yet a proper name, and may never have. This is far from a full fledged product.
#+END_NOTES

* Org-mode powa

This framework heavily relies on [[http://orgmode.org/][org-mode]] (version 9 at the time of writing) and the [[https://github.com/yjwen/org-reveal/][org-reveal]] exporter for =reveal.js=.

* About this slides deck                                         :slidesonly:

These slides are one variant of the same teaching material, also available [[./handbook.pdf][as a handbook]].

You may prefer to view them in your Web browser in full-screen (=F11=
for instance). Should =Reveal-JS= fail on displaying slides, an
alternate format would be the [[./slides.pdf][printed PDF]] (but
you're gonna lose the ability to display speaker notes).

#+BEGIN_NOTES
This section is displayed only in the slides variant, but not in the /handbook/ variant, which contains, in turn, a section that is different.
#+END_NOTES

* About this handbook                                          :handbookonly:

This PDF handbook is one variant of the same teaching material, also
available [[./slides.html][as a slides deck]]. Note that the layout is
formatted as a portrait handbook, including speaker notes.

This section may contain content that is best viewed in (LaTeX) PDF export of org-mode.

* Features
:PROPERTIES:
:REVEAL_EXTRA_ATTR: class="center"
:reveal_background: #dbdbed
:END:

** Writing teaching material in org-mode

The goal is to be able to edit a single file (namely =lesson.org=) which will contain, in a single source, all the content of a lesson, written with org-mode syntax.

From this single source, several documents are generated :
- *slides* (as a dynamic Web document) for overhead presentation
- a *handbook* that contains the same information (or more) and can be
  handed to the _students_ for work outside the classroom (a [[file:handbook.pdf][PDF file]])

#+REVEAL: split

- another *handbook* for the _teaching team_, to provide additional instructions (also a [[file:teacher-handbook.pdf][PDF file]])

#+BEGIN_NOTES
The handbook LaTeX formatting has a summarized content table and nice looking (in principle) title page. Customize at will.

The teachers handbook contains a less nice-looking format, includes a detailed table of contents, and has a watermark. Again, customize at will and submit improvements.
#+END_NOTES

** org-reveal slides

Pretty much all features of =reveal.js= supported by the org-mode reveal.js exporter [[https://github.com/yjwen/org-reveal/][org-reveal]], should be supported too.

An example =org-reveal= document is [[./elisp/org-reveal/Readme.html][available here]] for inspiration (it's the export of org-reveal's =README.org=, actually).

#+BEGIN_NOTES
If you're already familiar with reveal.js, you may have noticed that the current settings adopted for our slides generation are quite frugal: no fancy 3D effects and likes.

It's a matter of taste : I didn't want to show off, and prefer to give students a clear content on the projector behind me.
#+END_NOTES

** Structure of the sections / slides

I'm using the 3 levels of outlining / sectioning so that the content can be sectioned in the same way in =lesson.org= and appear appropriately in the slides and handbook, with these principles:

1. First level outlines define main sections of the document.
2. Second level outlines are the main "horizontal" slides that will be played with page up/down
3. Third level outlines may be used for additional content ("vertical" slides) that may be skipped for the presentation, but is still accessible with cursor keys.

#+BEGIN_NOTES
The first level outlines can be rendered as a "separating" slides which may get a different =reveal_background= and ~class="center"~ slide layout, but that isn't automatic. See [[*Section separators][Section separators]].
#+END_NOTES

** Presenter notes / content for the handbook

[[https://github.com/yjwen/org-reveal/#speaker-notes][org-reveal's /Speaker notes/]] may be added to the slides (and will only appear on
dual-screen presentation after having pressed '/s/': standard reveal.js
feature).

They will be masked for the audience, but will, by default appear in the handbook given to the students.

#+BEGIN_SRC org
  ,#+BEGIN_NOTES
  This is a note
  ,#+END_NOTES
#+END_SRC

** Masking content for some audiences

I've implemented some easy ways to preserve some of the content of the same =lesson.org= source for certain outputs (using org exporter's standard =EXCLUDE_TAGS=):

- /Slides only/ material :: that won't be embedded in the handbook : surprise stuff for live audience, or HTML-only hacks;
- /Teachers only/ material :: secret knowledge that only adults need
     to know (for instance), which won't be exported;
#+REVEAL: split
- /Handbook only/ material :: stuff that only fits in the handbook, and/or only exports as LaTeX and not HTML.

#+BEGIN_NOTES
The choice to reveal or not some details to the students is quite arbitrary and depends on your pedagogical approach. I'm not advisable in this matter. YMMV.
#+END_NOTES

** Stuff only meant for presentation

Tagging a section/slide with =:slidesonly:= means it isn't exported in the handbooks.

Below is an example (or not)...

*** Regular slide (no tag on heading line)

There should be no "Only in the slides" after this section, in the
handbooks, as it has been tagged with =slidesonly=.

*** Only in the slides                                         :slidesonly:

On the contrary, in the slides view, this appears, as there's a =:slidesonly:= tag on the current head line.

** Stuff only meant for teachers

Tagging a section/slide with =:teachersonly:= means it isn't exported in the students handbook (nor in the slides).

Below is an example...

*** Regular slide (no tag on heading line)

There should be no "Only for teachers" after this section, in the slides or in the
students handbook, as it has been tagged with =teachersonly=.

*** Only for teachers                                        :teachersonly:

On the contrary this appears in the teachers handbook, as there's a =:teachersonly:= tag on the current head line.

** Notes only for the teachers

This slide/section contains notes, but only part of it is displayed in
the presentation notes included in the handbook. Special notes and are
kept only for the teachers handbook.

We use an org-mode drawer for that (additional benefit is that the content is folded by default in emacs, as it may be verbose and/or "sensitive") :
#+BEGIN_SRC org
  ,#+BEGIN_NOTES
  This part of the note can be viewed by the students in the handbook.

  :TEACHERSONLY:
  Not this one
  :END:
  ,#+END_NOTES
#+END_SRC

#+BEGIN_NOTES

This part of the note can be viewed by the students in the handbook,
but not the rest.

:TEACHERSONLY:
- *TEACHERSONLY* :: but this part is only for the teachers.

You naughty ;-)
:END:

#+END_NOTES

** Stuff only in the handbooks

Just like sections are for slides only, others can be for the handbook
only, using the =handbookonly= tag. This may be useful for *Annex*
sections for instance, or for stuff that the HTML exporter won't like, with inline LaTeX.

** Code colorization
Code is colorized / highlighted in the slides :-)

#+BEGIN_NOTES
Nice when like me, you're teaching Computer Science stuff
#+END_NOTES
** Misc org-mode

*** Babel powa
As you're using org-mode, its =babel= components are available, to embed source code in the same =lesson.org= source, and manage executable code and teaching material at once.

Look for /literate programing/ instructions in the [[http://orgmode.org/manual/Working-with-source-code.html][org-mode docs]] to know more.

*** Jumping to slide number

Included is the use of the
[[https://github.com/SethosII/reveal.js-jump-plugin][reveal.js jump
plugin]] to allow jumping directly to slides # by entering a number
and hitting RETURN. Quite handy while writing and testing slides.

** Missing features ?

Please try and talk to me to suggest new stuff and/or provide patches ;)

#+BEGIN_NOTES
See the teacher's handbook for some ideas

:TEACHERSONLY:
- a way to manage graphics alongside the slides/handbook source... not yet found a perfect solution, unless for plantuml with babel or likes (tikz...).

- some breadcrumb or recap feature / template to help give a sense of
  the progression in the slides : only the progress bar isn't enough
  and doesn't help giving the audience some kind of scaffolding to
  hang on, for long presentations.

:END:
#+END_NOTES

* HowTo
:PROPERTIES:
:REVEAL_EXTRA_ATTR: class="center"
:reveal_background: #dbdbed
:END:

** Use Emacs

There's no production chain, makefiles or other authoring tools. 

No new Elisp either.

#+BEGIN_NOTES
You're welcome to suggest improvements. But I'm not an Elisp hacker,
so I may not be able to maintain them. At the moment, the intent is to
rely on the original org-reveal only, as much as possible.
#+END_NOTES

** Modify only the lesson.org

*Only one file should be edited for writing the lesson's material : =lesson.org=*

Only exception is modification of some configurations for title pages
and other bits that shouldn't change much in time (see next section).

** Configuration

Each =lesson.org= needs some configuration :
- Configure =org-reveal-title-slide= in =slides.org=.

- Configure in the headers elements like:
  - /header/ (=\lhead{...}= and =\rhead{...}=)
  - and /footer/ (=\lfoot{...}= and =\rfoot{...}=) 

  ex: =#+LaTeX_HEADER: \rhead{...}= in =handbook.org= and
    =teacher-handbook.org=.

#+BEGIN_NOTES
These may be better handled, but some limitations of the exporters or
my lack of knowledge/time have prevented a better result so
far. Improvements much welcome.
#+END_NOTES

** Generating final documents

We're using the standard exporters so each output format will be exported from its corresponding umbrella =.org= source :

#+REVEAL: split

- slides :: open =slides.org=, then =C-c C-e R ...= for =org-reveal= export (to =slides.html=), provided that you have loaded org-reveal in Emacs
- handbook :: open =handbook.org=, then =C-c C-e l ...= for LaTeX export (to =handbook.pdf=)
- teacher handbook :: open =teacher-handbook.org=, then =C-c C-e l ...= for LaTeX export (to =teacher-handbook.pdf=)

*** Exporting slides to HTML with org-reveal

Depending on how you installed org-reveal ([[*Git submodules][Git submodules]] or otherwise), =org-reveal= may already be available.

If not yet, load it with =M-x load-file= from the location of its Git submodule (=elisp/org-reveal/ox-reveal.el= by default).

#+BEGIN_NOTES
I'm not sure which solution is better : org-reveal from Git (hence the Git submodule) or from an Emacs package. Please report.
#+END_NOTES

*** Printing slides

I've tested [[https://github.com/astefanutti/decktape][DeckTape]] using a Docker container containing =PhantomJS= and
=decktape= to convert the slides to a [[file:slides.pdf][single PDF document]].

See the provided [[file:bin/decktape.sh][decktape.sh]] script that runs the container, bind-mounting the
working dir into the container, so that input and output files can be
found.

Note that I used a rebuilt Docker image, reusing the [[https://raw.githubusercontent.com/astefanutti/decktape/master/Dockerfile][DeckTape
Dockerfile]], rebuilding with something alongside:
#+BEGIN_SRC sh
docker build -t obergixlocal/decktape .
#+END_SRC

** Known Issues

*** Firefox issues ?

We have experienced issues with presentations made on some versions of Firefox, which are known by reveal.js maintainer... maybe best viewed in chrome.

You may prefer to have a PDF variant of the slides (see [[*Printing slides][Printing slides]]) in case.



* How it works / Installation
:PROPERTIES:
:REVEAL_EXTRA_ATTR: class="center"
:reveal_background: #dbdbed
:END:

** Use the source Luke

See the contents of the files... but be wary that it's sometimes messy and incrementally obtained.

Emacs is your buddy.

Git clone from =https://gitlab.com/olberger/org-teaching.git= (see the [[https://gitlab.com/olberger/org-teaching][Gitlab project]])

** TODO Use docker

You may use the docker container I've prepared, to make org-mode
exports. Or you may rebuild it yourself.

*** Build the Docker container image

#+BEGIN_SRC sh
cd docker
docker build -t obergixlocal/docker-org-export .
#+END_SRC

*** Run the container

Use the provided =docker/docker-org-export= script. See how [[file:Makefile]] does it.

** Git submodules

The repository contains Git submodules for :
- =reveal.js/=
- =elisp/org-reveal=
- reveal.js's jump plugin (=reveal.js-jump-plugin/=)

So :
#+BEGIN_SRC sh
git submodule init
git submodule update
#+END_SRC
You may prefer to install them another way (ELPA repo, CDN, etc.)

#+BEGIN_NOTES
Refer to [[https://github.com/yjwen/org-reveal/#requirements-and-installation][org-reveal's documentation]] for more details.
#+END_NOTES

** Slides appearance

*** Reveal.js settings

See the org-reveal settings set in the sources and the docs for a detailed explanation.

I'm using the following for a "frugal" look close to what
powerpoint or beamer (?) could look like :

#+BEGIN_SRC org
  ,#+REVEAL_HLEVEL: 2
  ,#+REVEAL_THEME: simple
  ,#+REVEAL_TRANS: fade
  ,#+REVEAL_SPEED: fast
  ,#+REVEAL_MARGIN: 0.0
  ,#+REVEAL_EXTRA_CSS: ./presentation.css
  ,#+REVEAL_ROOT: ./reveal.js

  ,#+OPTIONS: reveal_center:nil 
#+END_SRC

*** Section separators

The highest level sections include the following properties below the heading line, to customize the look of the slide. 

#+BEGIN_SRC org
:PROPERTIES:
:REVEAL_EXTRA_ATTR: class="center"
:reveal_background: #dbdbed
:END:
#+END_SRC

This is intended to provide some visual sense of the transitions between sections. Please adapt and report.

*** Title screen picture (logos, etc.)

I'm not yet sure how much may be achieved with HTML and CSS for the
title page of the slides deck, so I've relied on the embedding of a
background image that will contain the logos and additional graphics. 

#+BEGIN_SRC org
  ,#+REVEAL_TITLE_SLIDE_BACKGROUND: ./media/title-slide-background.png
#+END_SRC

I'm quite sure this could be improved.


* Annex                                                       

** Thanks

- All contributors to org-mode (special kudos to Carsten Dominik and Bastien Guerry)
- Yujie Wen for =org-reveal=
- Hakim El Hattab for =reveal.js=
- My colleagues at Telecom SudParis who had to teach with this tool without much rehersal
- Our students who endured it for a brand new course (and included bugs)

** Feedback

I may be contacted from [[http://www-public.tem-tsp.eu/~berger_o/#sec-3][my Web page]] or via [[https://gitlab.com/olberger/org-teaching][the Gitlab project]].

** Usage reports :handbookonly:

*** 2016-2018 at Telecom SudParis

Created and used for 2 editions of teaching "Web Architecture and Applications" in the CSC4101 module at Telecom SudParis (Olivier Berger and colleagues)

* COMMENT TODO


* COMMENT Footer 

# Local Variables:
# org-image-actual-width: nil
# End:
